

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: x
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: y
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: f
token: ID
type: 18
line_num: 2

lexeme: ,
token: COMMA
type: 2
line_num: 2

lexeme: g
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 3

lexeme: z
token: ID
type: 18
line_num: 3

lexeme: ;
token: SEMICOLON
type: 2
line_num: 3

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: int
token: VT_INTEGER
type: 14
line_num: 5

lexeme: w
token: ID
type: 18
line_num: 5

lexeme: ,
token: COMMA
type: 2
line_num: 5

lexeme: uwu
token: ID
type: 18
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: x
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: y
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: 3
token: DECIMAL_LITERAL
type: 16
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: w
token: ID
type: 18
line_num: 8

lexeme: =
token: ASSIGN
type: 8
line_num: 8

lexeme: 4
token: DECIMAL_LITERAL
type: 16
line_num: 8

lexeme: ;
token: SEMICOLON
type: 2
line_num: 8

lexeme: w
token: ID
type: 18
line_num: 9

lexeme: =
token: ASSIGN
type: 8
line_num: 9

lexeme: gcd
token: ID
type: 18
line_num: 9

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 9

lexeme: x
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: -
token: MINUS
type: 9
line_num: 9

lexeme: y
token: ID
type: 18
line_num: 9

lexeme: ,
token: COMMA
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 9

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 9

lexeme: ;
token: SEMICOLON
type: 2
line_num: 9

lexeme: z
token: ID
type: 18
line_num: 10

lexeme: =
token: ASSIGN
type: 8
line_num: 10

lexeme: false
token: FALSE_LITERAL
type: 15
line_num: 10

lexeme: ;
token: SEMICOLON
type: 2
line_num: 10

lexeme: z
token: ID
type: 18
line_num: 11

lexeme: =
token: ASSIGN
type: 8
line_num: 11

lexeme: hvf
token: ID
type: 18
line_num: 11

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 11

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 11

lexeme: ;
token: SEMICOLON
type: 2
line_num: 11

lexeme: testing_this
token: ID
type: 18
line_num: 12

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 12

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 12

lexeme: ;
token: SEMICOLON
type: 2
line_num: 12

lexeme: }
token: BRACE_R
type: 3
line_num: 13

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: gcd
token: ID
type: 18
line_num: 15

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: a
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: int
token: VT_INTEGER
type: 14
line_num: 15

lexeme: b
token: ID
type: 18
line_num: 15

lexeme: ,
token: COMMA
type: 2
line_num: 15

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 15

lexeme: h
token: ID
type: 18
line_num: 15

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 15

lexeme: {
token: BRACE_L
type: 3
line_num: 15

lexeme: c
token: ID
type: 18
line_num: 16

lexeme: int
token: VT_INTEGER
type: 14
line_num: 16

lexeme: ;
token: SEMICOLON
type: 2
line_num: 16

lexeme: if
token: RW_IF
type: 13
line_num: 17

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 17

lexeme: a
token: ID
type: 18
line_num: 17

lexeme: ==
token: EQUALS
type: 11
line_num: 17

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 17

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 17

lexeme: {
token: BRACE_L
type: 3
line_num: 17

lexeme: c
token: ID
type: 18
line_num: 18

lexeme: =
token: ASSIGN
type: 8
line_num: 18

lexeme: a
token: ID
type: 18
line_num: 18

lexeme: +
token: SUM
type: 9
line_num: 18

lexeme: b
token: ID
type: 18
line_num: 18

lexeme: ;
token: SEMICOLON
type: 2
line_num: 18

lexeme: }
token: BRACE_R
type: 3
line_num: 19

lexeme: else
token: RW_ELSE
type: 13
line_num: 19

lexeme: {
token: BRACE_L
type: 3
line_num: 19

lexeme: c
token: ID
type: 18
line_num: 20

lexeme: =
token: ASSIGN
type: 8
line_num: 20

lexeme: 20
token: DECIMAL_LITERAL
type: 16
line_num: 20

lexeme: ;
token: SEMICOLON
type: 2
line_num: 20

lexeme: }
token: BRACE_R
type: 3
line_num: 21

lexeme: return
token: RW_RETURN
type: 13
line_num: 22

lexeme: c
token: ID
type: 18
line_num: 22

lexeme: ;
token: SEMICOLON
type: 2
line_num: 22

lexeme: }
token: BRACE_R
type: 3
line_num: 23

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 25

lexeme: hvf
token: ID
type: 18
line_num: 25

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 25

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 25

lexeme: {
token: BRACE_L
type: 3
line_num: 25

lexeme: return
token: RW_RETURN
type: 13
line_num: 26

lexeme: true
token: TRUE_LITERAL
type: 15
line_num: 26

lexeme: ;
token: SEMICOLON
type: 2
line_num: 26

lexeme: }
token: BRACE_R
type: 3
line_num: 27

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 29

lexeme: the_empty_method
token: ID
type: 18
line_num: 29

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 29

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 29

lexeme: {
token: BRACE_L
type: 3
line_num: 29

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 30

lexeme: var_empty
token: ID
type: 18
line_num: 30

lexeme: ;
token: SEMICOLON
type: 2
line_num: 30

lexeme: }
token: BRACE_R
type: 3
line_num: 31

lexeme: void
token: RW_VOID
type: 13
line_num: 33

lexeme: testing_this
token: ID
type: 18
line_num: 33

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 33

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 33

lexeme: {
token: BRACE_L
type: 3
line_num: 33

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 34

lexeme: testing
token: ID
type: 18
line_num: 34

lexeme: ;
token: SEMICOLON
type: 2
line_num: 34

lexeme: }
token: BRACE_R
type: 3
line_num: 35

lexeme: }
token: BRACE_R
type: 3
line_num: 37

lexeme: $
token: $
type: 
line_num: 0

lexeme: class
token: RW_CLASS
type: 13
line_num: 0

lexeme: Program
token: ID
type: 18
line_num: 0

lexeme: {
token: BRACE_L
type: 3
line_num: 0

lexeme: int
token: VT_INTEGER
type: 14
line_num: 1

lexeme: a
token: ID
type: 18
line_num: 1

lexeme: ,
token: COMMA
type: 2
line_num: 1

lexeme: b
token: ID
type: 18
line_num: 1

lexeme: ;
token: SEMICOLON
type: 2
line_num: 1

lexeme: boolean
token: VT_BOOLEAN
type: 14
line_num: 2

lexeme: p
token: ID
type: 18
line_num: 2

lexeme: ;
token: SEMICOLON
type: 2
line_num: 2

lexeme: void
token: RW_VOID
type: 13
line_num: 4

lexeme: main
token: RW_MAIN
type: 13
line_num: 4

lexeme: (
token: PARENTHESIS_L
type: 4
line_num: 4

lexeme: )
token: PARENTHESIS_R
type: 4
line_num: 4

lexeme: {
token: BRACE_L
type: 3
line_num: 4

lexeme: a
token: ID
type: 18
line_num: 5

lexeme: =
token: ASSIGN
type: 8
line_num: 5

lexeme: 1
token: DECIMAL_LITERAL
type: 16
line_num: 5

lexeme: ;
token: SEMICOLON
type: 2
line_num: 5

lexeme: b
token: ID
type: 18
line_num: 6

lexeme: =
token: ASSIGN
type: 8
line_num: 6

lexeme: 2
token: DECIMAL_LITERAL
type: 16
line_num: 6

lexeme: ;
token: SEMICOLON
type: 2
line_num: 6

lexeme: p
token: ID
type: 18
line_num: 7

lexeme: =
token: ASSIGN
type: 8
line_num: 7

lexeme: True
token: ID
type: 18
line_num: 7

lexeme: ;
token: SEMICOLON
type: 2
line_num: 7

lexeme: }
token: BRACE_R
type: 3
line_num: 8

lexeme: }
token: BRACE_R
type: 3
line_num: 9

lexeme: $
token: $
type: 
line_num: 0

lexeme: $
token: $
type: 
line_num: 0